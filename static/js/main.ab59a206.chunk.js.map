{"version":3,"sources":["index.js"],"names":["weekday_string","getTimeString","time_h","time_m","toString","length","ScheduleTableBlock","props","className","value","map","event_item","index","ScheduleTableRow","time","Math","floor","display_x","ScheduleTable","border","day_string","display","display_y","index_num","EventList","events_list","name","weekdays","start_time_h","start_time_m","duration_h","onClick","deleteEvent","handleDeleteButton","ScheduleForm","porps","useState","id","input","setInput","handleChange","event","target","values","htmlFor","onChange","required","type","min","max","size","maxLength","preventDefault","addEvent","ClassSchedule","Array","fill","setDisplay","setEventsList","updateDisplay","new_display","i","events","j","display_row","slice","events_array","push","new_events_list","splice","parseInt","parseFloat","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ab59a206.chunk.js","sourcesContent":["import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport {useState, useEffect} from \"react\";\nimport \"./index.css\"\n\nconst weekday_string = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \n                        \"Friday\", \"Saturday\", \"Sunday\"];\n\nfunction getTimeString(time_h, time_m) {\n    time_h = time_h.toString();\n    if (time_h.length === 1) {\n        time_h = \"0\" + time_h;\n    }\n\n    time_m = time_m.toString();\n    if (time_m.length === 1) {\n        time_m = \"0\" + time_m;\n    }\n\n    return `${time_h}:${time_m}`\n}\n\nfunction ScheduleTableBlock(props) {\n    return (\n        <ol className=\"table-block\">\n        {props.value.map((event_item, index) => (\n            <li key={index} className=\"table-block-item\">{event_item}</li>\n        ))}\n        </ol>\n    );\n}\n\nfunction ScheduleTableRow(props) {\n    let time_h = Math.floor(props.index / 2), \n        time_m = (props.index % 2) * 30;\n    \n    let time = getTimeString(time_h, time_m);\n\n    return (\n        <tr>\n            <td key=\"-1\">{time}</td>\n            {props.value.map((display_x, index) => (\n                <td key={index}><ScheduleTableBlock value={display_x} /></td>\n            ))}\n        </tr>\n    );\n}\n\nfunction ScheduleTable(props) {\n    return (\n        <>\n        <table border=\"1\">\n            <thead>\n            <tr>\n                <th key=\"-1\">Time</th>\n                {weekday_string.map((day_string, index) => (\n                    <th key={index}>{day_string}</th>\n                ))}\n            </tr>\n            </thead>\n            <tbody>\n            {props.display.map((display_y, index_num) => (\n                <>\n                    <ScheduleTableRow value={display_y} index={index_num}/>\n                </>\n            ))}\n            </tbody>\n        </table>\n        </>\n    );\n\n}\n\nfunction EventList(props) {\n    const handleDeleteButton = (index) => {\n        props.deleteEvent(index);\n    }\n\n    return (\n        <>  \n            <h3>Event List</h3>\n            <ul className=\"event-list\">\n            {props.events_list.map((event_item, index) => (\n                <li key={index} className=\"event-list-item\">\n                    <span>{event_item.name} on {weekday_string[event_item.weekdays]} at {getTimeString(event_item.start_time_h, event_item.start_time_m)} for {event_item.duration_h} hours</span>\n                    <button \n                    onClick={() => handleDeleteButton(index)} \n                    className=\"del-btn\">\n                        Delete\n                    </button>\n                </li>\n            ))}\n            </ul>\n        </>\n    );\n}\n\nfunction ScheduleForm(porps) {\n    const [input, setInput] = useState({id: \"0\", name: \"\"});\n    \n    const handleChange = (event) => {\n        const name = event.target.name;\n        const value = event.target.value;\n        setInput(values => ({...values, [name]: value}))\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if (input.name.length === 0) {return;}\n        if (input.start_time_h < 0 || input.start_time_h > 23) {return;}\n        if (input.start_time_m < 0 || input.start_time_m > 59) {return;}\n        if (input.duration_h < 1 || input.duration_h > 23) {return;}\n        porps.addEvent(input);\n    }\n\n    return (\n        <>\n            <form className=\"event-form\">\n                <fieldset>\n                    <legend>Add Event</legend>\n                    <label htmlFor=\"weekday\">Weekday: </label>\n                    <select \n                        id=\"weekday\" name=\"id\" value={input.id} \n                        onChange={handleChange}\n                        required\n                    >\n                        <option value=\"0\">Monday</option>\n                        <option value=\"1\">Tuesday</option>\n                        <option value=\"2\">Wednesday</option>\n                        <option value=\"3\">Thursday</option>\n                        <option value=\"4\">Friday</option>\n                        <option value=\"5\">Saturday</option>\n                        <option value=\"6\">Sunday</option>\n                    </select>\n                    <br /><br />\n                    <label htmlFor=\"name\">Name: </label>\n                    <input \n                        type=\"text\" id=\"name\" name=\"name\" \n                        value={input.name || \"\"} onChange={handleChange}\n                        required\n                    />\n                    <br /><br />\n                    <label htmlFor=\"start-time\">Start at: </label>\n                    <input \n                        type=\"number\" id=\"start-time\" name=\"start_time_h\"\n                        min=\"0\" max=\"23\" size=\"2\" maxLength=\"2\"\n                        value={input.start_time_h || \"\"}\n                        onChange={handleChange}\n                    />\n                    <span>:</span>\n                    <input \n                        type=\"number\" name=\"start_time_m\"\n                        min=\"0\" max=\"59\" size=\"2\" maxLength=\"2\" \n                        value={input.start_time_m || \"\"}\n                        onChange={handleChange}\n                    />\n                    <br /><br />\n                    <label htmlFor=\"duration\">Duration: </label>\n                    <input\n                        type=\"number\" id=\"duration\" name=\"duration_h\"\n                        min=\"1\" max=\"23\" size=\"2\" maxLength=\"2\"\n                        value={input.duration_h || \"0\"}\n                        onChange={handleChange}\n                    />\n                    \n                    <br /><br />\n                    <button type=\"submit\" onClick={handleSubmit}>Create Event</button>\n                </fieldset>\n            </form>\n        </>\n\n    );\n}\n\nfunction ClassSchedule() {\n    const [display, setDisplay] = useState(new Array(48).fill(new Array(7).fill([])));\n    const [events_list, setEventsList] = useState([]);\n   \n    \n\n    const updateDisplay = (events_list) => {\n        let new_display = new Array(48).fill(new Array(7).fill([]));\n        for (let i = 0; i < events_list.length; i += 1) {\n            let events = events_list[i];\n            for (let j = events.start_time_h * 2; \n                 j < events.start_time_h * 2 + events.duration_h * 2;\n                 j += 1) {\n                \n\n                let display_row = new_display[j].slice();\n                let events_array = display_row[events.weekdays].slice();\n                events_array.push(events.name);\n                display_row[events.weekdays] = events_array;\n                new_display[j] = display_row;\n            }\n        }\n        setDisplay(new_display);\n\n    }\n\n    const addEvent = (input) => {\n        let new_events_list = events_list.slice();\n        new_events_list.push({\n            weekdays: parseInt(input.id),\n            name: input.name,\n            start_time_h: parseInt(input.start_time_h),\n            start_time_m: parseInt(input.start_time_m),\n            duration_h: parseFloat(input.duration_h),\n        });\n        setEventsList(new_events_list);\n        \n        updateDisplay(new_events_list);\n    }\n    \n    const deleteEvent = (index) => {\n        let new_events_list = events_list.slice();\n\n        new_events_list.splice(index, 1);\n        setEventsList(new_events_list);\n\n        updateDisplay(new_events_list);\n    }\n\n    return (\n        <>\n            <ScheduleTable display={display} />\n            <EventList events_list={events_list} deleteEvent={deleteEvent} />\n            <ScheduleForm addEvent={addEvent} />\n        </>\n    );\n}\n\nfunction App() {\n    return (\n        <>\n            <h1>Class Schedule</h1>\n            <ClassSchedule />\n        </>\n    );\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}